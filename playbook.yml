- name: Assemble Consul cluster
  hosts: consul_instances
  any_errors_fatal: true
  become: true
  become_user: root
  roles:
    - {role: ansible-consul}

- hosts: localhost
  tasks:
    - name: Ensure python and dependencies are installed
      apt:
        name: '{{ packages }}'
      vars:
        packages:
          - python3
          - python3-pip
          - python3-setuptools
          - python3-virtualenv
      become: true

    - name: Install docker python package
      pip:
        name: '{{ packages }}'
        executable: pip3
      vars:
        packages:
          - boto3
          - hvac
      become: true

    - name: create aws key
      community.aws.aws_kms:
        alias: vault-enc-key
        enable_key_rotation: true
        tags:
            Name: vault-enc-key
            Purpose: Encrypt S3 containing unseal and root token
        region: eu-west-3
      register: kms_key
      run_once: true
    
- name: Install Vault cluster
  hosts: vault_instances
  vars:
    vault_awskms_key_id: "{{ hostvars['localhost'].kms_key.key_arn }}"
  any_errors_fatal: true
  become: true
  become_user: root
  roles:
    - {role: ansible-vault}

- hosts: localhost
  tasks:
    - name: init Vault
      hashivault_init:
        recovery_shares: 1
        recovery_threshold: 1
        url: "http://192.168.1.40:8200"
      register: vault_init
      run_once: yes

    - name: Add root token to AWS Secrets Manager
      community.aws.aws_secret:
        name: 'paquerettes_vault_root_token'
        state: present
        secret_type: 'string'
        secret: "{{ vault_init.root_token }}"
        region: eu-west-3
      when: vault_init['changed'] == true

    - name: register root_token from secretsmanager
      shell: "aws secretsmanager get-secret-value --secret-id paquerettes_vault_root_token"
      register: root_token

    - debug:
        msg: "{{ root_token }}"

    - name: Create nomad-server policy
      hashivault_policy:
        token: "{{ root_token }}"
        name: nomad-server
        rules_file : nomad-server-policy.hcl
        url: "http://192.168.1.40:8200"

    - name: create nomad-cluster token role
      hashivault_write_from_file:
        key: nomad-cluster-role.json
        path: /auth/token/roles/nomad-cluster

- name: Installing Nomad
  hosts: nomad_instances
  any_errors_fatal: true
  become: true
  become_user: root
  roles:
    - {role: ansible-nomad}
